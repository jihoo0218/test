<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "Http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.BoardMapper">
    <!--게시글 작성 쿼리-->
    <insert id="saveBoard" parameterType="BoardVO">
        INSERT INTO enroll_test.board(title, contents,views, create_account_id, modify_account_id, "createAt")
        VALUES (#{title}, #{contents},0, #{createAccountId}, #{modifyAccountId}, CURRENT_TIMESTAMP)
    </insert>

    <!--게시글 불러오는 쿼리-->
    <!--  <select id="getBoardList" resultType="com.example.demo.dto.BoardListDto">
          select idx, title, views, "createAt" As "createdAt", create_account_id As "createAccountId" From
          enroll_test.board
      </select>-->
    <select id="getBoardList" resultType="com.example.demo.dto.BoardListDto" parameterType="map">
        select
        b.idx,
        b.title,
        b.views,
        COALESCE(c.avg,0) AS avg,
        COALESCE(c.count,0) AS count,
        b.create_account_id,
        b."createAt" AS createdAt
        From enroll_test.board b
        LEFT JOIN(
        select board_idx, AVG(grade), COUNT(board_idx)
        From enroll_test.comments Group By board_idx) c
        on b.idx = c.board_idx
        ORDER BY ${order} DESC
    </select>
    <!--게시글 불러올때 조회수 증가 쿼리-->
    <update id="increaseViews" parameterType="int">
        update enroll_test.board
        set views = views + 1
        where idx = #{boardIdx}
    </update>
    <!--게시글 상세페이지 불러오는 쿼리-->
    <select id="getBoardDetail" parameterType="int" resultType="com.example.demo.dto.BoardDetailDto">
        select idx, title, contents, views, "createAt" As"createdAt",create_account_id As "createAccountId"
        From enroll_test.board where idx = #{boardIdx}
    </select>
    <!--게시글 수정하는 쿼리-->
    <update id="boardUpdate" parameterType="com.example.demo.dto.BoardDetailDto">
        update enroll_test.board
        set title = #{title}, contents = #{contents}, "modifyAt" = now()
        where idx = #{idx}
    </update>
    <!--게시글 삭제하는 쿼리-->
    <delete id="boardDelete" parameterType="int">
        delete From enroll_test.board where idx = #{boardIdx}
    </delete>
    <!--게시글 댓글 조회하는 쿼리-->
    <select id="getComments" parameterType="int" resultType="com.example.demo.dto.CommentsDto">
        Select idx, grade, comments, create_account_id AS "createAccountId"
        FROM enroll_test.comments where board_idx = #{boardIdx}
        ORDER By create_at DESC
    </select>


</mapper>